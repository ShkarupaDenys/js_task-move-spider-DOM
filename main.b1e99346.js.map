{"version":3,"sources":["scripts/main.js"],"names":["document","addEventListener","e","wall","target","closest","spider","querySelector","borderWidth","parseInt","window","getComputedStyle","getPropertyValue","x","clientX","offsetLeft","y","clientY","offsetTop","roundCoord","coord","direction","isDirectionVertical","spiderWidth","clientWidth","spiderHeight","clientHeight","halfOfSpider","wallWidth","wallHeight","min","style"],"mappings":";AAAA,aAEAA,SAASC,iBAAiB,QAAS,SAAAC,GAC3BC,IAAAA,EAAOD,EAAEE,OAAOC,QAAQ,SAE1B,GAACF,EAAD,CAIEG,IAAAA,EAASN,SAASO,cAAc,WAChCC,EAAcC,SAClBC,OAAOC,iBAAiBR,GAAMS,iBAAiB,iBAG3CC,EAAIX,EAAEY,QAAUX,EAAKY,WACrBC,EAAId,EAAEe,QAAUd,EAAKe,UAErBC,EAAa,SAACC,GAAOC,IACnBC,EAAoC,OADL,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAE/BC,EAAcjB,EAAOkB,YACrBC,EAAenB,EAAOoB,aACtBC,GAAgBL,EAAsBC,EAAcE,GAAgB,EAEpEG,EAAYzB,EAAKqB,YACjBK,EAAa1B,EAAKuB,aAElBI,EAAMH,EAAenB,EAQvBY,OAAAA,IAPQE,EAAsBM,EAAYE,EAAMD,EAAaC,GAGhDR,EACbM,EAAYH,EACZI,EAAaJ,EAMbL,GAASU,EATI,EAaVV,EAAQO,EAAenB,GAGhCF,EAAOyB,MACEZ,cAAAA,OAAAA,EAAWH,GAAeG,cAAAA,OAAAA,EAAWN,EAAG,KADjD","file":"main.b1e99346.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\ndocument.addEventListener('click', e => {\n  const wall = e.target.closest('.wall');\n\n  if (!wall) {\n    return;\n  }\n\n  const spider = document.querySelector('.spider');\n  const borderWidth = parseInt(\n    window.getComputedStyle(wall).getPropertyValue('border-width')\n  );\n\n  const x = e.clientX - wall.offsetLeft;\n  const y = e.clientY - wall.offsetTop;\n\n  const roundCoord = (coord, direction = 'y') => {\n    const isDirectionVertical = direction === 'x';\n    const spiderWidth = spider.clientWidth;\n    const spiderHeight = spider.clientHeight;\n    const halfOfSpider = (isDirectionVertical ? spiderWidth : spiderHeight) / 2;\n\n    const wallWidth = wall.clientWidth;\n    const wallHeight = wall.clientHeight;\n\n    const min = halfOfSpider + borderWidth;\n    const max = isDirectionVertical ? wallWidth - min : wallHeight - min;\n\n    const minCoord = 0;\n    const maxCoord = isDirectionVertical\n      ? wallWidth - spiderHeight\n      : wallHeight - spiderHeight;\n\n    if (coord >= max) {\n      return maxCoord;\n    }\n\n    if (coord <= min) {\n      return minCoord;\n    }\n\n    return coord - halfOfSpider - borderWidth;\n  };\n\n  spider.style = `\n    top: ${roundCoord(y)}px; left: ${roundCoord(x, 'x')}px;\n  `;\n});\n"]}